{"version":3,"sources":["BooksAPI.js","Shelf.js","SearchBooks.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","books","Shelf","handleOnChangeShelf","_this","props","onChangeShelf","_this2","this","_this$props","shelfTitle","react_default","a","createElement","className","map","key","href","previewLink","target","rel","style","width","height","backgroundImage","imageLinks","smallThumbnail","onChange","e","value","disabled","defaultChecked","title","authors","author","publisher","Component","PropsTypes","array","isRequired","string","func","SearchBooks","state","searchTerm","loading","handleTermChange","setState","term","BooksAPI","changeShelf","componentDidMount","updateQuery","search_term","searchBook","_this3","_this$state","showingBooks","filter","toLowerCase","includes","backgroundColor","react_router_dom","to","trim","type","placeholder","marginTop","src_Shelf","length","toLocaleUpperCase","BooksApp","updateMessage","App_LoadingShelf","catch","error","currentlyReading","wantToRead","read","react_router","exact","path","render","margin","fontWeight","textAlign","src_SearchBooks","LoadingShelf","maxWidth","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.4da0b2b7.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, { Component } from 'react';\nimport PropsTypes from 'prop-types';\n\nclass Shelf extends Component{\n\n    static PropsTypes = {\n        books: PropsTypes.array.isRequired,\n        shelfTitle: PropsTypes.string.isRequired,\n        onChangeShelf: PropsTypes.func.isRequired\n    }\n\n    handleOnChangeShelf = (book, shelf) => {\n        if(this.props.onChangeShelf) this.props.onChangeShelf(book, shelf);\n    }\n\n    render(){\n\n        const { books, shelfTitle } = this.props;\n\n        return(\n            <div className=\"bookshelf\">\n                    <h2 className=\"bookshelf-title\">{shelfTitle}</h2>\n                    <div className=\"bookshelf-books\">\n                    <ol className=\"books-grid\">\n                        {books.map((book) => (\n                            <li key={book.id}>\n                            <div className=\"book\">\n                                <div className=\"book-top\">\n                                <a href={book.previewLink} target=\"_black\" rel=\"noopener\">\n                                    <div className=\"book-cover\" style={{ width: 128, height: 188, backgroundImage: `url(${book.imageLinks.smallThumbnail})` }}></div>\n                                </a>\n                                <div className=\"book-shelf-changer\">\n                                    <form >\n                                        <select onChange={(e) => {\n                                            this.handleOnChangeShelf(book, e.target.value)\n                                        }} value={(book.shelf) ? (book.shelf) : \"none\" }>\n                                            <option value=\"move\" disabled>Move to...</option>\n                                            <option value=\"currentlyReading\">Currently Reading</option>\n                                            <option value=\"wantToRead\" >Want to Read</option>\n                                            <option value=\"read\" >Read</option>\n                                            <option value=\"none\" defaultChecked=\"true\">None</option>\n                                        </select>\n                                    </form>\n                                </div>\n                                </div>\n                                <div className=\"book-title\">\n                                    <a href={book.previewLink} target=\"_black\" rel=\"noopener\">{book.title}</a>\n                                </div>\n                                <div className=\"book-authors\">{(book.authors) ? (book.authors.map((author) => (`${author} `))) : (book.publisher)}</div>\n                            </div>\n                            </li>\n                        ))}\n                    </ol>\n                    </div>\n                </div>\n        )\n    }\n}\n\n\nexport default Shelf;","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport * as BooksAPI from './BooksAPI';\nimport Shelf from './Shelf';\n\n\nclass SearchBooks extends Component {\n\n    state = {\n      query: '',\n      searchTerm: 'android',\n      books: [],\n      loading: true\n    }\n\n    handleTermChange = (e) => {\n      this.setState(()=>({\n        loading: true\n      }))\n      const term = e.target.value;\n      BooksAPI.search(term)\n        .then(books => {\n          this.setState(()=>({\n            books,\n            searchTerm: term,\n            loading: false\n          }))\n        })\n    }\n\n    changeShelf = (book, shelf) => {\n      BooksAPI.update(book, shelf)\n        .then((books) => {\n          this.componentDidMount()\n      })\n    }\n\n    updateQuery = (query) => {\n      this.setState(()=>({\n        query\n      }))\n    }\n\n    searchBook(search_term){\n      BooksAPI.search(search_term)\n        .then((books) => {\n          this.setState(()=>({\n            books,\n            loading: false\n          }))\n        })\n    }\n\n    componentDidMount(){\n      this.searchBook(this.state.searchTerm)\n    }\n\n    render(){\n\n        const SEARCH_TERMS = ['Android', 'Art', 'Artificial Intelligence', 'Astronomy', 'Austen', 'Baseball', 'Basketball', 'Bhagat', 'Biography', 'Brief', 'Business', 'Camus', 'Cervantes', 'Christie', 'Classics', 'Comics', 'Cook', 'Cricket', 'Cycling', 'Desai', 'Design', 'Development', 'Digital Marketing', 'Drama', 'Drawing', 'Dumas', 'Education', 'Everything', 'Fantasy', 'Film', 'Finance', 'First', 'Fitness', 'Football', 'Future', 'Games', 'Gandhi', 'Homer', 'Horror', 'Hugo', 'Ibsen', 'Journey', 'Kafka', 'King', 'Lahiri', 'Larsson', 'Learn', 'Literary Fiction', 'Make', 'Manage', 'Marquez', 'Money', 'Mystery', 'Negotiate', 'Painting', 'Philosophy', 'Photography', 'Poetry', 'Production', 'Programming', 'React', 'Redux', 'River', 'Robotics', 'Rowling', 'Satire', 'Science Fiction', 'Shakespeare', 'Singh', 'Swimming', 'Tale', 'Thrun', 'Time', 'Tolstoy', 'Travel', 'Ultimate', 'Virtual Reality', 'Web Development', 'iOS']\n        const {loading, searchTerm, books, query} = this.state;\n\n        const showingBooks = query === \"\" ? books : books.filter(book => book.title.toLowerCase().includes(query.toLowerCase()) || (book.authors ? book.authors.toString().toLowerCase().includes(query.toLowerCase()) : book.publisher.toString().toLowerCase().includes(query.toLowerCase())) );\n\n        return(\n            <div className=\"search-books\">\n            <div className=\"search-books-bar\" style={{backgroundColor: '#fff'}}>\n              <Link className=\"close-search\" to=\"/\" >Close</Link>\n              <div className=\"search-books-input-wrapper\">\n                {/*\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\n                  You can find these search terms here:\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\n\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\n                  you don't find a specific author or title. Every search is limited by search terms.\n                */}\n                <input onChange={(e) => {this.updateQuery(e.target.value.trim())}} value={query} type=\"text\" placeholder=\"Search by title or author\"/>\n              </div>\n              <select className=\"search-books-terms\" onChange={this.handleTermChange}>\n                  {SEARCH_TERMS.map(search_term => (\n                    <option key={search_term.toLowerCase()} value={search_term.toLowerCase()}>{search_term}</option>\n                  ))}\n                </select>\n            </div>\n            <div className=\"search-books-results\" style={{marginTop: '1.5rem'}}>\n              <ol className=\"books-grid\">\n              {(loading) ? (<h4>Loading result...</h4>) : (<Shelf onChangeShelf={(book, shelf) => {this.changeShelf(book, shelf)}} shelfTitle={`Showing ${showingBooks.length} result for ${searchTerm.toLocaleUpperCase()}`} books={showingBooks} />)}\n              </ol>\n            </div>\n          </div>\n        )\n    }\n}\n\nexport default SearchBooks;","import React, { Component } from 'react'\nimport * as BooksAPI from './BooksAPI'\nimport './App.css';\nimport SearchBooks from './SearchBooks';\nimport Shelf from './Shelf';\nimport {Route, Link} from 'react-router-dom';\n\n\n\nclass BooksApp extends Component {\n  state = {\n    books: [],\n    loading: true,\n    updateMessage: <LoadingShelf />\n  }\n\n  componentDidMount(){\n    BooksAPI.getAll()\n      .then((books) => {\n        this.setState(()=>({\n          books,\n          loading: false\n        }))\n      })\n      .catch((e) => {\n        this.setState(() => ({\n          updateMessage: <LoadingShelf error={true} />\n        }))\n      })\n  }\n\n\n  changeShelf = (book, shelf) => {\n    BooksAPI.update(book, shelf)\n      .then((books) => {\n        this.componentDidMount()\n    })\n  }\n \n  \n  render() {  \n\n    const {books, loading, updateMessage} = this.state;\n\n    const currentlyReading = books === [] ? books : books.filter(book => (book.shelf === \"currentlyReading\"));\n    const wantToRead = books === [] ? books : books.filter(book => (book.shelf === \"wantToRead\"));\n    const read = books === [] ? books : books.filter(book => (book.shelf === \"read\"));\n\n    \n    return (\n      <div className=\"app\">\n        <Route\n          exact\n          path=\"/\"\n          render={() => (\n            <div className=\"list-books\">\n            <div className=\"list-books-title\">\n              <h1>MyReads</h1>\n            </div>\n            <div className=\"list-books-content\">\n              <div>\n                {(loading) ? (<div style={{ margin: 'auto', fontWeight: '400', textAlign: 'center' }}>{updateMessage}</div>):(<Shelf onChangeShelf={(book, shelf) => {this.changeShelf(book, shelf)}} shelfTitle=\"Currently Reading\" books={currentlyReading} />)}\n                {(loading) ? (()=>{}) : (<Shelf onChangeShelf={(book, shelf) => {this.changeShelf(book, shelf)}} shelfTitle=\"Want To Read\" books={wantToRead} />)}\n                {(loading) ? (()=>{}) : (<Shelf onChangeShelf={(book, shelf) => {this.changeShelf(book, shelf)}} shelfTitle=\"Read\" books={read} />)}\n                </div>\n              </div>\n            </div>\n          )}\n        />\n        <Route\n          path=\"/search\"\n          render={() => (<SearchBooks />)}\n        />\n        <div className=\"open-search\">\n          <Link to=\"/search\" className=\"button\">Add a book</Link>\n        </div>\n    </div>\n    )\n  }\n}\n\n\nclass LoadingShelf extends Component{\n\n  render(){\n    return(\n      (this.props.error) ? (<div className=\"spinner-container\">\n        <h3 style={{maxWidth: '540px'}}>Unable you get your books, please check your internet connection and refresh</h3>\n      </div>) : (\n        <div className=\"spinner-container\">\n        <div className=\"spinner\"></div>\n      </div>\n      )\n    )\n  }\n}\n\n\n\n\nexport default BooksApp;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'))\n"],"sourceRoot":""}